# Binutils Makefile

NM= binutils
VRS= 2.16.1
DIR= $(NM)-$(VRS)
FILE= $(DIR).tar.bz2
URL-$(FILE)= $(HTTP)/$(NM)/$(FILE)
SHA-$(FILE)= 5c80fd5657da47efc16a63fdd93ef7395319fbbf

PATCH40= $(DIR)-posix-1.patch
URL-$(PATCH40)= $(HTTP)/$(NM)/$(PATCH40)
SHA-$(PATCH40)= 7bd70eb6359d9ed5c1691208dfa321d68c5e1d9c

PATCH41= $(DIR)-genscripts_multilib-1.patch
URL-$(PATCH41)= $(HTTP)/$(NM)/$(PATCH41)
SHA-$(PATCH41)= 1d7cb62e537ddfea800d7790149e3ce74d415928

include $(CROSSVARS)

DEPS= $(FILE) $(PATCHES)

# Targets

include $(ROOT)/scripts/functions

LINKER ?= ld-linux.so.2

cross: $(DEPS)
	$(sep_dir_build)

compile-cross:
	cd ../$(DIR) ; for PATCH in $(PATCHES) ; do patch -Np1 -i ../$$PATCH ; done
	../$(DIR)/configure --prefix=$(CROSS_WD) --host=$(LFS_HOST) \
	--target=$(LFS_TARGET) --with-lib-path=$(WD)/lib \
	--disable-nls --enable-shared $(ENABLE-64-BIT-BFD)
	make configure-host
	make headers -C bfd
	make $(PM)
	make install
	cp -v ../$(DIR)/include/libiberty.h $(WD)/include

stage1: $(DEPS)
	$(sep_dir_build)

compile-stage1:
	cd ../$(DIR) ; for PATCH in $(PATCHES) ; do patch -Np1 -i ../$$PATCH ; done
	CC="$${CC} $(64FLAGS)" ../$(DIR)/configure --prefix=$(WD) --libdir=$(WD)/$(LIB_MAYBE64) \
	 --with-lib-path=$(WD)/lib --build=$(LFS_HOST) --host=$(LFS_TARGET) \
	 --target=$(LFS_TARGET) --disable-nls --enable-shared \
	 $(ENABLE-64-BIT-BFD)
	make configure-host
	make headers -C bfd
	make $(PM)
	make install

# fIXME: copy this file for cross-case also
pass1: $(FILE)
	$(sep_dir_build_noclean)
	cp $(SRC)/$(FILE) $(LFSSRC)

compile-pass1:
	../$(DIR)/configure --prefix=$(WD) --disable-nls
	make $(PM)
	make install
	make -C ld clean
	make -C ld LIB_PATH=$(WD)/lib

adjust-toolchain:
	echo 'main(){}' > dummy.c && cc dummy.c && \
	 readelf -l a.out > .specstest
	if ! grep -q $(WD) .specstest ; then cd $(NM)-build && \
	 make -C ld install && \
	 SPECFILE=`dirname $$(gcc -print-libgcc-file-name)`/specs && \
	 gcc -dumpspecs > $$SPECFILE && \
	 sed 's@/lib/$(LINKER)@$(WD)&@g' $$SPECFILE > tempspecfile && \
	 mv -f tempspecfile $$SPECFILE && unset SPECFILE && \
	 GCC_INCLUDEDIR=`dirname $$(gcc -print-libgcc-file-name)`/include && \
	 find $${GCC_INCLUDEDIR}/* -maxdepth 0 -xtype d -exec rm -rf '{}' \; && \
	 rm -f `grep -l "DO NOT EDIT THIS FILE" $${GCC_INCLUDEDIR}/*` && \
	 unset GCC_INCLUDEDIR && \
	 cd .. && make clean ; fi
	touch $@

pass2: $(FILE) 
	$(sep_dir_build_noclean)

compile-pass2:
	../$(DIR)/configure --prefix=$(WD) --disable-nls \
	 --enable-shared --with-lib-path=$(WD)/lib
	make $(PM)
	make install
	make -C ld clean
	make -C ld LIB_PATH=/usr/lib:/lib

chroot-re-adjust-toolchain:
	chroot "$(MP)" $(chenv-pre-bash) \
	'cd $(ROOT) && make ch-re-adjust-toolchain $(chbash-pre-bash)'

re-adjust-toolchain:
	echo 'main(){}' > dummy.c && cc dummy.c && \
	 readelf -l a.out > .specstest
	if grep -q $(WD) .specstest ; then cd $(NM)-build && \
	 make -C ld INSTALL=$(WD)/bin/install install && \
	 SPECFILE=`dirname $$(gcc -print-libgcc-file-name)`/specs && \
	 gcc -dumpspecs > $$SPECFILE && \
	 sed -i 's@$(WD)/lib/$(LINKER)@/lib/$(LINKER)@g' $$SPECFILE && \
	 unset SPECFILE ; rm .specstest ; fi
	make clean
	touch $@

chroot:
	chroot "$(MP)" $(chenv-pre-bash) \
	'cd $(ROOT) && make ch-$(NM) $(chbash-pre-bash)'

stage2: $(DEPS)
	$(sep_dir_build)

compile-stage2:
	cd ../$(DIR) ; for PATCH in $(PATCHES) ; do patch -Np1 -i ../$$PATCH ; done
ifndef CROSS
	../$(DIR)/configure --prefix=/usr --enable-shared
else
	CC="gcc $(64FLAGS)" ../$(DIR)/configure --prefix=/usr \
	 --enable-shared $(ENABLE-64-BIT-BFD) --libdir=/usr/$(LIB_MAYBE64)
	make configure-host
endif
	make $(PM) tooldir=/usr
	make tooldir=/usr install
	cp ../$(DIR)/include/libiberty.h /usr/include

clean:
	-rm -rf $(DIR)
	-rm -rf $(NM)-build

.PHONY: compile-cross compile-stage1 compile-pass1 clean chroot compile-pass2 compile-stage2
