# Binutils Makefile

NM= binutils
VRS= 2.17
DIR= $(NM)-$(VRS)
FILE= $(DIR).tar.bz2
URL-$(FILE)= $(HTTP)/$(NM)/$(FILE)
SHA-$(FILE)= a557686eef68362ea31a3aa41ce274e3eeae1ef0

# Targets

include $(ROOT)/scripts/functions

export LFS_USE_TARGET := yes

pass1: $(FILE)
	$(sep_dir_build)

compile-pass1:
# --disable-shared overrides unsuitable default from config.site
	unset CFLAGS ; ../$(DIR)/configure --prefix=$(WD) --disable-nls --disable-shared
	unset CFLAGS ; make
	unset CFLAGS ; make install
	unset CFLAGS ; make -C ld clean
	unset CFLAGS ; make -C ld LIB_PATH=$(WD)/lib
	cp -v ld/ld-new $(WD)/bin

adjust-toolchain:
	mv -v $(WD)/bin/{ld,ld-old}
	mv -v $(WD)/$$(gcc -dumpmachine)/bin/{ld,ld-old}
	mv -v $(WD)/bin/{ld-new,ld}
	ln -sv $(WD)/bin/ld $(WD)/$$(gcc -dumpmachine)/bin/ld
	gcc -dumpspecs | sed 's@^/lib/ld-linux.so.2@/tools&@g' \
	  > `dirname $$(gcc -print-libgcc-file-name)`/specs
	GCC_INCLUDEDIR=`dirname $$(gcc -print-libgcc-file-name)`/include && \
	find $${GCC_INCLUDEDIR}/* -maxdepth 0 -xtype d -exec rm -rvf '{}' \; && \
	rm -vf `grep -l "DO NOT EDIT THIS FILE" $${GCC_INCLUDEDIR}/*` && \
	unset GCC_INCLUDEDIR
	touch $@

pass2: $(FILE) 
	$(sep_dir_build)

compile-pass2:
# --disable-shared overrides unsuitable default from config.site
	../$(DIR)/configure --prefix=$(WD) --disable-nls \
	 --with-lib-path=$(WD)/lib --disable-shared
	make
	make install
	make -C ld clean
	make -C ld LIB_PATH=/usr/lib:/lib
	cp -v ld/ld-new $(WD)/bin

chroot-re-adjust-toolchain:
	chroot "$(MP)" $(chenv-pre-bash) \
	'cd $(ROOT) && make ch-re-adjust-toolchain $(chbash-pre-bash)'

re-adjust-toolchain:
	mv -v $(WD)/bin/{ld,ld-old}
	mv -v $(WD)/$$(gcc -dumpmachine)/bin/{ld,ld-old}
	mv -v $(WD)/bin/{ld-new,ld}
	ln -sv $(WD)/bin/ld $(WD)/$$(gcc -dumpmachine)/bin/ld
	gcc -dumpspecs | \
	perl -p -e 's@$(WD)/lib/ld-linux.so.2@/lib/ld-linux.so.2@g;' \
	    -e 's@\*startfile_prefix_spec:\n@$$_/usr/lib/ @g;' > \
	    `dirname $$(gcc -print-libgcc-file-name)`/specs
	touch $@

chroot:
	chroot "$(MP)" $(chenv-pre-bash) \
	'cd $(ROOT) && make ch-$(NM) $(chbash-pre-bash)'

stage2: $(FILE)
	$(sep_dir_build)

compile-stage2:
	../$(DIR)/configure --prefix=/usr --enable-shared
	make tooldir=/usr
	-make CFLAGS= -k check
	make tooldir=/usr install
	cp ../$(DIR)/include/libiberty.h /usr/include

clean:
	-rm -rf $(DIR)
	-rm -rf $(NM)-build

.PHONY: compile-pass1 clean chroot compile-pass2 compile-stage2
