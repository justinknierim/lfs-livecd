# Binutils Makefile

NM= binutils
VRS= 2.16.1
DIR= $(NM)-$(VRS)
FILE= $(DIR).tar.bz2
URL-$(FILE)= $(HTTP)/$(NM)/$(FILE)
SHA-$(FILE)= 5c80fd5657da47efc16a63fdd93ef7395319fbbf

# Targets

include $(ROOT)/scripts/functions

ifeq ($(LFS-ARCH),ppc)
	LINKER=ld.so.1
else
	LINKER=ld-linux.so.2
endif

pass1: $(FILE)
	$(sep_dir_build_noclean)
	cp $(SRC)/$(FILE) $(LFSSRC)

compile-pass1:
	../$(DIR)/configure --prefix=$(WD) --disable-nls
	make $(PM)
	make install
	make -C ld clean
	make -C ld LIB_PATH=$(WD)/lib

adjust-toolchain:
	echo 'main(){}' > dummy.c && cc dummy.c && \
	 readelf -l a.out > .specstest
	if ! cat .specstest | grep -q $(WD) ; then cd $(NM)-build && \
	 make -C ld install && \
	 SPECFILE=`dirname $$(gcc -print-libgcc-file-name)`/specs && \
	 gcc -dumpspecs > $$SPECFILE && \
         sed 's@^/lib/$(LINKER)@$(WD)&@g' $$SPECFILE > tempspecfile && \
         mv -f tempspecfile $$SPECFILE && unset SPECFILE && \
         GCC_INCLUDEDIR=`dirname $$(gcc -print-libgcc-file-name)`/include && \
	 find $${GCC_INCLUDEDIR}/* -maxdepth 0 -xtype d -exec rm -rf '{}' \; && \
	 rm -f `grep -l "DO NOT EDIT THIS FILE" $${GCC_INCLUDEDIR}/*` && \
	 unset GCC_INCLUDEDIR && \
	 cd .. && make clean ; fi
	touch $@

pass2: $(FILE)
	$(sep_dir_build_noclean)

compile-pass2:
	../$(DIR)/configure --prefix=$(WD) --disable-nls \
	 --enable-shared --with-lib-path=$(WD)/lib
	make $(PM)
	make install
	make -C ld clean
	make -C ld LIB_PATH=/usr/lib:/lib

chroot-re-adjust-toolchain:
	chroot "$(MP)" $(chenv-pre-bash) \
	'cd $(ROOT) && make ch-re-adjust-toolchain $(chbash-pre-bash)'

re-adjust-toolchain:
	echo 'main(){}' > dummy.c && cc dummy.c && \
	 readelf -l a.out > .specstest
	if cat .specstest | grep -q $(WD) ; then cd $(NM)-build && \
	 make -C ld INSTALL=$(WD)/bin/install install && \
	 SPECFILE=`dirname $$(gcc -print-libgcc-file-name)`/specs && \
	 gcc -dumpspecs > $$SPECFILE && \
	 sed -i 's@^$(WD)/lib/$(LINKER)@/lib/$(LINKER)@g' $$SPECFILE && \
	 unset SPECFILE ; fi
	make clean
	touch $@

chroot:
	chroot "$(MP)" $(chenv-pre-bash) \
	'cd $(ROOT) && make ch-$(NM) $(chbash-pre-bash)'

stage2: $(FILE)
	$(sep_dir_build)

compile-stage2:
	../$(DIR)/configure --prefix=/usr --enable-shared
	make $(PM) tooldir=/usr
	make tooldir=/usr install
	cp ../$(DIR)/include/libiberty.h /usr/include

clean:
	-rm -rf $(DIR)
	-rm -rf $(NM)-build

.PHONY: compile-pass1 clean chroot compile-pass2 compile-stage2
